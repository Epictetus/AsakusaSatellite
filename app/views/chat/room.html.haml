= javascript_include_tag :on_the_spot
.yield
 %div.room-info
  %div
   .left
    %h3.title= on_the_spot_edit @room, :title
   .right
    =link_to image_tag("action_stop.gif"), :controller => :room, :action => :delete
   .clear
  - unless @room.user.nil?
   %div.room-owner
    = t(:room_created_by) + " "
    %img.profile{:src => @room.user.profile_image_url, :alt => @room.user.screen_name}
    = @room.user.name
  %div.room-date
   = t(:created_at) + " " + l(@room.created_at)
 .message-list
  - @messages.reverse_each do |message|
   = render :partial => 'message', :locals => { |
    :id                => message.id, |
    :profile_image_url => message.user && message.user.profile_image_url, |
    :screen_name =>  message.user && message.user.screen_name, |
    :name =>  message.user.name, |
    :body => message.html_body }

 - if logged?
  .input
   = form_for :chat, :url => {:controller => :chat, :action => :message, :room_id => @room.id } do |f|
    =text_area_tag :message, '', :class => :text
    =submit_tag t(:send), :class => 'submit red button large', :id => 'send'
    =image_tag("connection_fail.gif", :class => 'websocket-status')

= content_for :javascripts do
 = javascript_include_tag "jquery.websocket"
 = javascript_include_tag "jquery.multiline"
 = javascript_include_tag "jquery.scrollTo-min"
 = javascript_include_tag "jquery.tmpl.min"
 = javascript_include_tag "jquery.desktopnotify"
 - templ = render :partial => 'message', :locals => { |
    :id                => '${id}', |
    :profile_image_url => '${profile_image_url}', |
    :screen_name => '${screen_name}', |
    :name => '${name}', |
    :body => '{{html html_body}}' }
 :javascript
  $(function() {
    // 表示時のメッセージ
    $.template( "messageTemplate", #{templ.inspect} );
    $(".message-list").webSocket({
     makeElement : function(message){ return  $.tmpl( "messageTemplate", message ); }
    });

    // メッセージの送信
    $('textarea#message').multiline();
    $(".message-list").bind('websocket::connect', function(_, ws){
      $('form').bind('submit', function(e){
        e.stopPropagation();
        e.preventDefault();

        jQuery.post(
         '#{url_for(:controller=>'api/v1/message', :action=>'create')}',
         { 'room_id' : '#{@room.id}',
           'message' : $('textarea#message').val()})
      });
    });
    $(".message-list").bind('websocket::create', function(){
      $('textarea#message').val('');
    });

    // WebSocket接続状況の表示
    $(".message-list").bind('websocket::connect', function(){
      $("img.websocket-status").attr('src', '#{image_path('connection.gif')}');
    });
    $(".message-list").bind('websocket::error', function(){
      $("img.websocket-status").attr('src', '#{image_path('connection_fail.gif')}');
    });

    // 表示後スクロール
    $(".message-list").bind('websocket::create', function(){
      $(window).scrollTo( 'form', 500, { easing:'swing', queue:true, axis:'y' } );
    });
    $(window).scrollTo( 'form', 500, { easing:'swing', queue:true, axis:'y' } );

    // 通知
    $(".message-list").bind('websocket::create', function(_, message){
      if(message.screen_name != '#{current_user.screen_name}') {
        $.fn.desktopNotify({
            picture: message.profile_image_url,
            title: message.name,
            text : message.body
        });
      }
    });
    $('#send').desktopNotifyAddPermission();
  });


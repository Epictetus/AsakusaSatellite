Could not load SystemTimer >= v1.2.0. Falling back to timeout.rb. SystemTimer is STRONGLY recommended for timeouts in Ruby 1.8.7. See http://ph7spot.com/blog/system-timer-1-2-release for details.
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby -S bundle exec rspec ./spec/controllers/account_controller_spec.rb ./spec/controllers/api/v1/login_controller_spec.rb ./spec/controllers/api/v1/message_controller_spec.rb ./spec/controllers/api/v1/room_controller_spec.rb ./spec/controllers/api/v1/user_controller_spec.rb ./spec/controllers/chat_controller_spec.rb ./spec/controllers/login_controller_spec.rb ./spec/controllers/room_controller_spec.rb ./spec/controllers/search_controller_spec.rb ./spec/helpers/account_helper_spec.rb ./spec/helpers/application_helper_spec.rb ./spec/helpers/chat_helper_spec.rb ./spec/helpers/login_helper_spec.rb ./spec/helpers/room_helper_spec.rb ./spec/helpers/search_helper_spec.rb ./spec/lib/asakusa_satellite/event_spec.rb ./spec/lib/asakusa_satellite/hook_spec.rb ./spec/lib/asakusa_satellite/inline_plugin_spec.rb ./spec/lib/asakusa_satellite/routes_spec.rb ./spec/lib/asakusa_satellite/url_util_spec.rb ./spec/models/attachment_spec.rb ./spec/models/member_spec.rb ./spec/models/message_spec.rb ./spec/models/room_spec.rb ./spec/models/setting_spec.rb ./spec/models/user_spec.rb
(in /Users/sue/work/raisin/AsakusaSatellite)
Could not load SystemTimer >= v1.2.0. Falling back to timeout.rb. SystemTimer is STRONGLY recommended for timeouts in Ruby 1.8.7. See http://ph7spot.com/blog/system-timer-1-2-release for details.
/Users/sue/work/raisin/AsakusaSatellite/vendor/plugins/as_redmine_ticket_link/lib/filter.rb:3: warning: already initialized constant VERIFY_PEER

AccountController
  ログイン時
    index
      should be success
      複数回アクセス
        spell
          should == "spell-1"
  未ログイン時
    index
      should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"index", :controller=>"account"}, :protocol=>"http://", :host=>"test.host"}

Api::V1::LoginController
  ログインAPI
DEPRECATION WARNING: Api::V1::LoginController is deprecated. Instead, please use api_key parameter. (called from index at /Users/sue/work/raisin/AsakusaSatellite/app/controllers/api/v1/login_controller.rb:6)
    ユーザを取得できれば ok を返す
DEPRECATION WARNING: Api::V1::LoginController is deprecated. Instead, please use api_key parameter. (called from index at /Users/sue/work/raisin/AsakusaSatellite/app/controllers/api/v1/login_controller.rb:6)
    ユーザを取得できない場合は error を返す
DEPRECATION WARNING: Api::V1::LoginController is deprecated. Instead, please use api_key parameter. (called from index at /Users/sue/work/raisin/AsakusaSatellite/app/controllers/api/v1/login_controller.rb:6)
    複数のユーザがいる場合でもちゃんと動作する

Api::V1::MessageController
  特定の発言取得
    should have json "/screen-name[text() = 'user']"
    should have json "/body[text() = 'hoge']"
    should have json "/view"
    should have json "/profile-image-url[text() = 'http://example.com/hoge.png']"
    should have json "/view[not(contains(text(), 'api'))]"
  発言一覧取得
    オプションなし
      response
        should have json "/view"
        should have json "/id[text() = '4e3255ccd2aa324317000176']"
        should have json "/id[text() = '4e3255cdd2aa324317000198']"
        should not have json "/id[text() = '4e3255ced2aa3243170001cc']"
      messages
        should have 20 items
    until_idを指定
BSON::ObjectId('4e3255cfd2aa324317000217')
      should be include #<Message _id: 4e3255cfd2aa324317000230, room_id: nil, created_at: Fri Jul 29 06:40:15 UTC 2011, body: "hoge", updated_at: Fri Jul 29 06:40:15 UTC 2011, _type: nil>
BSON::ObjectId('4e3255d0d2aa32431700024c')
      should be include #<Message _id: 4e3255d0d2aa324317000266, room_id: nil, created_at: Fri Jul 29 06:40:16 UTC 2011, body: "hoge", updated_at: Fri Jul 29 06:40:16 UTC 2011, _type: nil>
BSON::ObjectId('4e3255d1d2aa324317000281')
      should not be include #<Message _id: 4e3255d1d2aa32431700029c, room_id: nil, created_at: Fri Jul 29 06:40:17 UTC 2011, body: "hoge", updated_at: Fri Jul 29 06:40:17 UTC 2011, _type: nil>
    since_idを指定
      should not be include #<Message _id: 4e3255d2d2aa3243170002cf, room_id: nil, created_at: Fri Jul 29 06:40:18 UTC 2011, body: "hoge", updated_at: Fri Jul 29 06:40:18 UTC 2011, _type: nil>
      should not be include #<Message _id: 4e3255d2d2aa324317000305, room_id: nil, created_at: Fri Jul 29 06:40:18 UTC 2011, body: "hoge", updated_at: Fri Jul 29 06:40:18 UTC 2011, _type: nil>
      should be include #<Message _id: 4e3255d3d2aa32431700033b, room_id: nil, created_at: Fri Jul 29 06:40:19 UTC 2011, body: "hoge", updated_at: Fri Jul 29 06:40:19 UTC 2011, _type: nil>
    countを指定
      should have 1 items
  発言作成
undefined method `to_msgpack' for BSON::ObjectId('4e3255d4d2aa32431700038a'):BSON::ObjectId
undefined method `to_msgpack' for BSON::ObjectId('4e3255d4d2aa32431700038a'):BSON::ObjectId
    should change #size
    it should behave like 成功
undefined method `to_msgpack' for BSON::ObjectId('4e3255d5d2aa3243170003c1'):BSON::ObjectId
      should have json "/status[text() = 'ok']"
  発言更新
    it should behave like 成功
undefined method `to_msgpack' for BSON::ObjectId('4e3255d5d2aa3243170003f7'):BSON::ObjectId
      should have json "/status[text() = 'ok']"
    body
undefined method `to_msgpack' for BSON::ObjectId('4e3255d6d2aa32431700042c'):BSON::ObjectId
      should == "modified"
  発言削除
undefined method `to_msgpack' for BSON::ObjectId('4e3255d6d2aa324317000461'):BSON::ObjectId
    should be nil
    it should behave like 成功
undefined method `to_msgpack' for BSON::ObjectId('4e3255d7d2aa324317000496'):BSON::ObjectId
      should have json "/status[text() = 'ok']"
  復活の呪文を間違えた
    発言
      it should behave like 失敗
        should have json "/status[text() = 'error']"
    発言更新
      it should behave like 失敗
        should have json "/status[text() = 'error']"
    発言更新
      it should behave like 失敗
        should have json "/status[text() = 'error']"
  別のユーザ
    発言更新
      it should behave like 失敗
        should have json "/status[text() = 'error']"
    発言削除
      it should behave like 失敗
        should have json "/status[text() = 'error']"

Api::V1::RoomController
  部屋作成
    response
      it should behave like 成功する
        should have json "/status[text() = 'ok']"
    DB
      should change #size
  部屋名の変更
    it should behave like 成功する
      should have json "/status[text() = 'ok']"
    title
      should == "new_name"
  部屋の削除
    it should behave like 成功する
      should have json "/status[text() = 'ok']"
    deleted
      should be true
  部屋の一覧
    should have json "/name[text() = 'title']"
  復活の呪文を間違えた
    部屋の作成
      it should behave like 失敗する
        should have json "/status[text() = 'error']"
    部屋名の変更
      it should behave like 失敗する
        should have json "/status[text() = 'error']"
      title
        should == "title"
    部屋の削除
      it should behave like 失敗する
        should have json "/status[text() = 'error']"
      deleted
        should be false

Api::V1::UserController
  api_keyが一致
    should have json "/id[text() = '4e3255d9d2aa3243170005ef']"
    should have json "/name[text() = 'name']"
    should have json "/screen-name[text() = 'screen-name']"
    should have json "/profile-image-url[text() = 'url']"
  api_keyが不一致
    should have json "/status[text() = 'error']"
    should have json "/error[text() = 'user not found']"

ChatController
  発言投稿
ActionView::Template::Error
    should change #size
    部屋
      updated_at
ActionView::Template::Error
        should == Fri Jul 29 15:40:26 +0900 2011
  入室
    messages
      should have 20 records
  発言更新
    発言者
      body
ActionView::Template::Error
        should == "modified"
    非発言者
      body
        should == "body"
  トップページ
    should have 1 records
    should be all
  個別ページ
    prev
BSON::ObjectId('4e3255dcd2aa324317000775')
      should have 5 items
    next
BSON::ObjectId('4e3255dcd2aa3243170007ab')
      should have 5 items
  非ログイン時
    should change #size
    部屋作成
      should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"room", :controller=>"chat"}, :protocol=>"http://", :host=>"test.host"}
  部屋が存在しない
    発言投稿
      should raise Exception
    入室
      should redirect to {:script_name=>"", :action=>"index", :_path_segments=>{:action=>"room", :controller=>"chat", :id=>BSON::ObjectId('4e3255ddd2aa324317000883')}, :protocol=>"http://", :host=>"test.host"}

LoginController
  ログアウト後
    current_user_id
      should be nil
  OAuth
    /oauthにアクセスしたとき
      should be redirect
    denied時
      oauth
        should be nil
    allow時
      jsonパース成功時
        current_user_id
          should not be nil
      jsonパース失敗時
        current_user_id
          should be nil
      200 OKが返ってこない
        current_user_id
          should be nil

RoomController
  ログイン時
    it should behave like 部屋を消せる
      room
        deleted
          should be true
      response
        should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"delete", :controller=>"room", :id=>BSON::ObjectId('4e3255ded2aa3243170008bd')}, :protocol=>"http://", :host=>"test.host"}
    部屋作成
      should change #size
  owner以外でログイン時
    it should behave like 部屋を消せる
      room
        deleted
          should be true
      response
        should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"delete", :controller=>"room", :id=>BSON::ObjectId('4e3255ded2aa3243170008c6')}, :protocol=>"http://", :host=>"test.host"}
  未ログイン時
    部屋作成
      should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"create", :controller=>"room"}, :protocol=>"http://", :host=>"test.host"}
    /configure
      should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"configure", :controller=>"room", :id=>BSON::ObjectId('4e3255ded2aa3243170008ca')}, :protocol=>"http://", :host=>"test.host"}
    /deleteにPOST後
      room
        deleted
          should be false
      response
        should redirect to {:script_name=>"", :action=>"index", :controller=>"chat", :_path_segments=>{:action=>"delete", :controller=>"room", :id=>BSON::ObjectId('4e3255ded2aa3243170008ce')}, :protocol=>"http://", :host=>"test.host"}

SearchController
  index
    response
      should be success
    assigns
      should not be nil
  search
    空文字列
      should redirect to {:script_name=>"", :action=>"index", :controller=>"search", :_path_segments=>{:action=>"search", :controller=>"search"}, :protocol=>"http://", :host=>"test.host"}
    部屋指定なし
      Message.find_by_text
        should be expected messages received
      results
        should not be nil
    部屋指定あり
      Message.find_by_text
        should be expected messages received
      Room.find
        should be expected messages received
      results
        should not be nil

AccountHelper

ApplicationHelper
  current_user
    ログイン時
      should be logged
      current_user
        should == #<User _id: 4e3255ded2aa3243170008d0, name: nil, profile_image_url: nil, created_at: Fri Jul 29 06:40:30 UTC 2011, updated_at: Fri Jul 29 06:40:30 UTC 2011, _type: nil, spell: nil, email: nil, screen_name: nil>
    ログアウト時
      should not be logged
  mine_type
    should be image mimetype "image/png"
    should not be image mimetype "text/plain"

ChatHelper
  成功時
    作成
      it should behave like publish message
        should be expected messages received
    更新
      it should behave like publish message
        should be expected messages received
    削除
      it should behave like publish message
        should be expected messages received
  失敗時
    作成
      it should behave like not publish message
        should be expected messages received
    更新
      it should behave like not publish message
        should be expected messages received
    削除
      it should behave like not publish message
        should be expected messages received

LoginHelper

RoomHelper
  部屋がない
    it should behave like not found room
      callbacked
        should be false
      redirect
        should be expected messages received
  部屋が削除されている
    it should behave like not found room
      callbacked
        should be false
      redirect
        should be expected messages received
  ログインしていない
    認証不要
      it should behave like found room
        callbacked
          should be true
        redirect
          should be expected messages received
    認証要
      it should behave like not found room
        callbacked
          should be false
        redirect
          should be expected messages received
  ログインしている
    it should behave like found room
      callbacked
        should be true
      redirect
        should be expected messages received

SearchHelper

AsakusaSatellite::Event
  基底
    fire
      単一
        it should behave like callback
          should be expected messages received
      複数
        it should behave like callback
          should be expected messages received
      引数付き
        it should behave like callback
          should be expected messages received
    remove
      it should behave like callback
        should be expected messages received
  合成
    map
      it should behave like callback
        should be expected messages received
    filter
      not filtered
        it should behave like callback
          should be expected messages received
      filtered
        it should behave like callback
          should be expected messages received
    merge
      left
        it should behave like callback
          should be expected messages received
      right
        it should behave like callback
          should be expected messages received
      複数引数
        it should behave like callback
          should be expected messages received

AsakusaSatellite::Hook::Listener
  call hook
    should =~ /test1 message/
    should =~ /test2 message/

AsakusaSatellite::Filter::InlinePlugin
  引数なし
    should == "aでゲソ"
  引数あり
    should == "aとbでゲソ"
  設定あり
    should == "42"

AsakusaSatellite::Routes
  #map
    引数なし
      should == [1]
    引数あり
      should == [2]

AsakusaSatellite::UrlUtil
  パラメータ無
    name
      should == :get
    query
      should == {}
  パラメータ有
    name
      should == :get
    query
      should == {:a=>"1", :b=>"2"}

Attachment
  should change #size
  to_hash
    disk_filename
      should == "file.png"
    filename
      should == "file.png"
    content_type
      should == "image/png"
  create_and_save_file
    should be exists "/Users/sue/work/raisin/AsakusaSatellite/public/upload/hogehoge-attachment_spec.rb"
    filename
      should == "attachment_spec.rb"
    disk_filename
      should match /hogehoge/

Member

Message
BSON::ObjectId('4e3255e1d2aa3243170008e6')
  should have 1 prev
BSON::ObjectId('4e3255e1d2aa3243170008ff')
  should have 2 prev
  should have 1 next
  should have 2 next
  body
    should == "body of message 5"
  room
    should == #<Room _id: 4e3255e1d2aa324317000963, created_at: Fri Jul 29 06:40:33 UTC 2011, title: "test room", updated_at: Fri Jul 29 06:40:33 UTC 2011, deleted: false, _type: nil, yaml: nil>
  room
    title
      should == "test room"
  hash
    should == BSON::ObjectId('4e3255e2d2aa3243170009a3')
    name
      should == "test user"
    profile_image_url
      should == nil
    body
      should == "body of message 5"
    attachment
      should == nil
    screen_name
      should == "test"
    created_at
      should == "i18n:Fri Jul 29 15:40:35 +0900 2011"
    html_body
      should == "filtered:body of message 5"
  prev
BSON::ObjectId('4e3255e3d2aa324317000a5d')
    should == [#<Message _id: 4e3255e3d2aa324317000a67, room_id: nil, created_at: Fri Jul 29 06:40:35 UTC 2011, body: "body of message 3", updated_at: Fri Jul 29 06:40:35 UTC 2011, _type: nil>, #<Message _id: 4e3255e3d2aa324317000a69, room_id: nil, created_at: Fri Jul 29 06:40:35 UTC 2011, body: "body of message 4", updated_at: Fri Jul 29 06:40:35 UTC 2011, _type: nil>]
  next
    should == [#<Message _id: 4e3255e3d2aa324317000a86, room_id: nil, created_at: Fri Jul 29 06:40:35 UTC 2011, body: "body of message 6", updated_at: Fri Jul 29 06:40:35 UTC 2011, _type: nil>, #<Message _id: 4e3255e3d2aa324317000a88, room_id: nil, created_at: Fri Jul 29 06:40:35 UTC 2011, body: "body of message 7", updated_at: Fri Jul 29 06:40:35 UTC 2011, _type: nil>]
  find_by_text
    部屋指定なし
      一致する場合
        should have 2 item
        it should behave like メッセージ有
          room
            should == #<Room _id: 4e3255e4d2aa324317000aa8, created_at: Fri Jul 29 06:40:36 UTC 2011, title: "test room", updated_at: Fri Jul 29 06:40:36 UTC 2011, deleted: false, _type: nil, yaml: nil>
          messages
            should have 11 records
      一致しない場合
        should have 2 item
        it should behave like メッセージ無
          room
            should == #<Room _id: 4e3255e5d2aa324317000af3, created_at: Fri Jul 29 06:40:37 UTC 2011, title: "test room", updated_at: Fri Jul 29 06:40:37 UTC 2011, deleted: false, _type: nil, yaml: nil>
          messages
            should have 0 records
    部屋指定あり
      単一指定
        should have 1 item
        it should behave like メッセージ有
          room
            should == #<Room _id: 4e3255e5d2aa324317000b3e, created_at: Fri Jul 29 06:40:37 UTC 2011, title: "test room", updated_at: Fri Jul 29 06:40:37 UTC 2011, deleted: false, _type: nil, yaml: nil>
          messages
            should have 11 records
      複数指定
        should have 2 item
        it should behave like メッセージ有
          room
            should == #<Room _id: 4e3255e6d2aa324317000b89, created_at: Fri Jul 29 06:40:38 UTC 2011, title: "test room", updated_at: Fri Jul 29 06:40:38 UTC 2011, deleted: false, _type: nil, yaml: nil>
          messages
            should have 11 records

Room
  タイトルが空
    it should behave like 妥当でない部屋
      save
        should be false
      validate
        should be false
  タイトルがnil
    it should behave like 妥当でない部屋
      save
        should be false
      validate
        should be false
  初期状態
    it should behave like 妥当でない部屋
      save
        should be false
      validate
        should be false
  all_live
    rooms が空
      should have 0 records
    rooms が2個
0
2
2
      should have 2 records
    rooms が2個かつ1個削除されている
      should have 1 records
  to_json
    name
      should == "room1"
    user
      should == {:screen_name=>nil, :profile_image_url=>nil, :name=>nil, :id=>BSON::ObjectId('4e3255e6d2aa324317000bd9')}
    updated_at
      should == "Fri Jul 29 15:40:38 +0900 2011"
  yaml field
    should have 1 items
    foo
      should == "baz"

Setting
DEPRECATION WARNING: RAILS_ROOT is deprecated. Please use ::Rails.root.to_s. (called from /Users/sue/work/raisin/AsakusaSatellite/spec/models/setting_spec.rb:6)
  各設定を読める

User
  should be respond to :name
  should be respond to :screen_name
  should be respond to :email
  should be respond to :profile_image_url
  should be respond to :spell
  to_json
    should not have key :spell
    should not have key :email
    name
      should == "test user"
    screen_name
      should == "test"
    profile_image_url
      should == "http://example.com/profile.png"

Finished in 29.83 seconds
191 examples, 0 failures
